<?php
namespace exface\UI5Facade\Facades\Elements;

use exface\Core\Widgets\SplitPanel;
use exface\Core\Widgets\Split;

/**
 * Renders a Split widget as sap.ui.layout.ResponsiveSplitter
 * 
 * For a simple split the structure is
 * 
 * ```
 * ResponsiveSplitter (generated by UI5Split)
 * |- PaneContainer (generated by UI5Split)
 * |  |- SplitPane (generated by UI5SplitPanel)
 * |  |- |- Panel (generated by UI5SplitPanel)
 * |  |- SplitPane (generated by UI5SplitPanel)
 * |  |- |- Panel (generated by UI5SplitPanel)
 * 
 * ```
 * 
 * A nested split (e.g. dashboard) must be rendered as a single ResponsiveSplitter 
 * to make sure all panels collapse to a single slider. In this case the structure is
 * 
 * ```
 * ResponsiveSplitter (generated by UI5Split)
 * |- PaneContainer (generated by UI5Split)
 * |  |- SplitPane (generated by UI5SplitPanel)
 * |  |- |- Panel (generated by UI5SplitPanel)
 * |  |- PaneContainer (generated by UI5Split of the nested Split)
 * |  |  |- SplitPane (generated by UI5SplitPanel in the nested Split)
 * |  |  |- |- Panel (generated by UI5SplitPanel in the nested Split)
 * |  |  |- SplitPane (generated by UI5SplitPanel in the nested Split)
 * |  |  |- |- Panel (generated by UI5SplitPanel in the nested Split)
 * 
 * ```
 * 
 * UI5Split and UI5Split both need different logic for regular contents and nested
 * splits!
 * 
 * @method \exface\Core\Widgets\Split getWidget()
 * @author Andrej Kabachnik
 *
 */
class UI5Split extends UI5Container
{
    private $sizesInitial = [];
    
    /**
     * 
     * {@inheritDoc}
     * @see \exface\UI5Facade\Facades\Elements\UI5Container::buildJsConstructor()
     */
    public function buildJsConstructor($oControllerJs = 'oController') : string
    {
        $widget = $this->getWidget();
        // NOTE: buildJsPropertyLayoutData() is required for setting width/height
        // of nested splits! See UI5SplitPanel for details.
        $splitter = <<<JS

            new sap.ui.layout.PaneContainer({
                orientation: "{$this->getOrientation()}",
                panes: [
                    {$this->buildJsChildrenConstructors()}
                ],
                {$this->buildJsPropertyLayoutData()}
            })
            {$this->buildJsPseudoEventHandlers()}

JS;
        
        // If this widget is NOT a nested split, wrap the PaneContainer in a ResponsiveSplitter
        if (! $widget->hasParent() || ! ($widget->getParent() instanceof SplitPanel) && ! ($widget->getParent() instanceof Split)) {
            $height = $widget->getHeight()->isUndefined() ? '100%' : $this->buildCssHeight();
            $width = $widget->getWidth()->isUndefined() ? '100%' : $this->buildCssWidth();
            $splitter = <<<JS
        
    new sap.ui.layout.ResponsiveSplitter("{$this->getId()}", {
        height: "$height",
        width: "$width",
        rootPaneContainer: [
            $splitter
        ]
    })
    
JS;
        }
        
        // Add the page wrapper if needed
        if ($this->hasPageWrapper() === true) {
            return $this->buildJsPageWrapper($splitter);
        }
        
        return $splitter;
    }
        
    /**
     * 
     * @return string
     */
    protected function getOrientation()
    {
        return $this->getWidget()->isSideBySide() === true  ? 'Horizontal' : 'Vertical';
    }
}
